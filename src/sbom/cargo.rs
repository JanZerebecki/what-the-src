use crate::errors::*;
use crate::sbom;
use serde::{Deserialize, Serialize};
use std::collections::VecDeque;

pub const STRAIN: &str = "cargo-lock";

#[derive(Debug, PartialEq)]
pub struct CargoLock {
    pub data: String,
}

impl CargoLock {
    pub fn parse(&self) -> Result<ParsedLock> {
        let toml = toml::from_str(&self.data)?;
        Ok(toml)
    }
}

#[derive(Debug, PartialEq, Deserialize)]
pub struct ParsedLock {
    version: u8,
    #[serde(rename = "package")]
    packages: VecDeque<serde_json::Value>,
}

impl Iterator for ParsedLock {
    type Item = Result<sbom::Package>;

    fn next(&mut self) -> Option<Self::Item> {
        let package = self.packages.pop_front()?;
        match serde_json::from_value::<Packagev3>(package) {
            Ok(pkg) => Some(Ok(pkg.into())),
            Err(err) => Some(Err(err.into())),
        }
    }
}

#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct Packagev3 {
    pub name: String,
    pub version: String,
    pub source: Option<String>,
    pub checksum: Option<String>,
}

impl From<Packagev3> for sbom::Package {
    fn from(sbom: Packagev3) -> Self {
        Self {
            name: sbom.name,
            version: sbom.version,
            checksum: sbom.checksum.map(|chksum| format!("sha256:{chksum}")),
        }
    }
}

#[cfg(test)]
mod tests {
    use super::*;
    use crate::sbom::Sbom;

    #[test]
    fn test_parse_cargo_lock() {
        let data = r#"# This file is automatically @generated by Cargo.
# It is not intended for manual editing.
version = 3

[[package]]
name = "aho-corasick"
version = "1.1.2"
source = "registry+https://github.com/rust-lang/crates.io-index"
checksum = "b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0"
dependencies = [
 "memchr",
]

[[package]]
name = "anyhow"
version = "1.0.79"
source = "registry+https://github.com/rust-lang/crates.io-index"
checksum = "080e9890a082662b09c1ad45f567faeeb47f22b5fb23895fbe1e651e718e25ca"
"#;
        let cargo = Sbom::new("cargo-lock", data.to_string()).unwrap();
        let list = cargo.to_packages().unwrap();
        assert_eq!(
            list,
            [
                Packagev3 {
                    name: "aho-corasick".to_string(),
                    version: "1.1.2".to_string(),
                    source: "registry+https://github.com/rust-lang/crates.io-index".to_string(),
                    checksum: "b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0"
                        .to_string(),
                },
                Packagev3 {
                    name: "anyhow".to_string(),
                    version: "1.0.79".to_string(),
                    source: "registry+https://github.com/rust-lang/crates.io-index".to_string(),
                    checksum: "080e9890a082662b09c1ad45f567faeeb47f22b5fb23895fbe1e651e718e25ca"
                        .to_string(),
                },
            ]
        );
    }
}
